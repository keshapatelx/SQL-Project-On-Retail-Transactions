--- Title :-        Retail Transactions
--- Created by :-   Kesha Patel
--- Date :-         20-02-2023
--- Tool used:-     Microsoft SQL Server

--Show the total number of transactions made in each city
SELECT location_city, COUNT(*) AS total_transactions
FROM [Retail Transactions]
GROUP BY location_city
ORDER BY total_transactions DESC;

--Show the total number of transactions made in each state
SELECT location_state, COUNT(*) AS total_transactions
FROM [Retail Transactions]
GROUP BY location_state
ORDER BY total_transactions DESC;

--Show the total revenue generated by each city
SELECT location_city, SUM(order_amt) AS total_revenue
FROM [Retail Transactions]
GROUP BY location_city
order by total_revenue desc;

--Show the total revenue generated by each state
SELECT location_state, SUM(order_amt) AS total_revenue
FROM [Retail Transactions]
GROUP BY location_state
order by total_revenue desc;

--Show the average number of items purchased per transaction
SELECT AVG(num_of_items) AS avg_items_per_transaction
FROM [Retail Transactions];

--Calculate the average discount amount for transactions where a coupon was used
SELECT AVG(discount_amt) AS avg_coupon_discount
FROM [Retail Transactions]
WHERE coupon_flag = 'Yes';

--Find the top 5 cities with the highest average transaction amount
SELECT top 5 location_city, AVG(order_amt) AS avg_transaction_amount
FROM [Retail Transactions]
GROUP BY location_city
ORDER BY avg_transaction_amount DESC

--Calculate the average number of transactions per day of the week
SELECT DATEPART(dw, transaction_date) AS day_of_week, AVG(num_transactions) AS avg_transactions_per_day
FROM (
    SELECT transaction_date, COUNT(*) AS num_transactions
    FROM [Retail Transactions]
    GROUP BY transaction_date
) AS daily_transactions
GROUP BY DATEPART(dw, transaction_date);


--Get an output with a total Order amount month wise sorted by ordered amount highest to lowest
SELECT MONTH(transaction_date) as Month, SUM(order_amt) as TotalOrderAmt
FROM [Retail Transactions]
GROUP BY MONTH(transaction_date)
ORDER BY TotalOrderAmt DESC;

--Get an output presenting Total Order Amount by Company per Hour
SELECT DATEPART(HOUR, transaction_hour) AS hours, SUM(order_amt) AS sales
FROM [Retail Transactions]
GROUP BY DATEPART(HOUR, transaction_hour)
ORDER BY sales DESC;

--Get an output presenting Count of rewards which were genuine
SELECT 	COUNT(rewards_number) as genuine_reward_members
FROM 	[Retail Transactions]
WHERE 	rewards_member = 'TRUE';

--Get an output presenting Count of rewards which were fake
SELECT 	COUNT(rewards_number) as fake_reward_members
FROM 	[Retail Transactions]
WHERE 	rewards_member = 'FALSE';

--Give an output which represents total, max, min, avg Discount given to Customers in each city
SELECT 	 location_city, sum(discount_amt),Round(AVG(discount_amt),2),min(discount_amt),max(discount_amt)
FROM 	 [Retail Transactions]
GROUP BY location_city
ORDER BY sum(discount_amt) desc;

--Calculate the Discount % given to Customers in each city.
SELECT 	 location_city, round(sum(discount_amt) * 100 /Sum(order_amt),2) as Discount_perc
FROM 	 [Retail Transactions]
GROUP BY location_city
ORDER BY Discount_perc desc;

--Give an output which represents total, max, min, avg Ordered Amount by Customers in each city
SELECT 	 location_city, sum(order_amt) as Total_Amount,AVG(order_amt) as Avg_Amount,min(order_amt) as Min_Amount,max(order_amt) as Max_Amount
FROM 	 [Retail Transactions]
GROUP BY location_city
ORDER BY SUM(order_amt) desc;

--Give an output which represents total, max, min, avg No.of Orders by Customers in each city
SELECT location_city, sum(num_of_items) as Total_Num_of_Orders,round(AVG(num_of_items),2) as Avg_num_of_items,min(num_of_items) as Min_num_of_items,max(num_of_items) as Max_num_of_items
FROM [Retail Transactions]
GROUP BY location_city
ORDER BY sum(num_of_items) desc;


